openapi: 3.0.3
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Berdugo1994/FootballLeagueManagement/1.0.0
info:
  description: Football League Management API
  version: 1.0.0
  title: Football management league
  contact:
    email: berdugoe@post.bgu.ac.il
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: main
    description: Landing page
  - name: auth
    description: Login, Register and Logout actions
  - name: team
    description: Team data
  - name: player
    description: Player data
  - name: favorite
    description: Favorites Players, Teams, Games
  - name: game
    description: Games data
paths:
  /league/:
    get:
      tags:
        - "main"
      summary: "main league page"
      operationId: "getMainLeaguePage"
      parameters:
        - in: "cookie"
          name: "user_id"
          description: "user cookie"
          required: false
        - in: "cookie"
          name: "type"
          description: "user cookie"
          required: false
      responses:
        '200':
          description: "logged user main page"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/leagueMainPageUser'
        '206':
          description: "guest main page - partial returned"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/leagueMainPage'
  /auth/login:
    post:
    tags:
        - "auth"
    summary: "User login into system"
    operationId: "loginUser"
    requestBody:
      description: JSON object for login
      required: true
      content:
        required: true
        application/json:
          schema:
            $ref: '#/components/schemas/LoginBody'
      responses:
        '200':
          description: "User login succeed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: "incorrect username or password"
  /auth/register:
    post:
      tags:
      - "auth"
      summary: "Create user"
      description: "Added a user into the database"
      operationId: "createUser"
      requestBody:
        description: JSON object for register
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegUser'
      responses:
        '201':
          description: "User creation succeed"
        '401':
          description: "cannot create user"
        '409':
          description: "username is taken"
    /auth/logout:
    get:
      tags:
      - "auth"
      summary: "logout user"
      description: "logging out a user and deletes his cookie."
      operationId: "LogOut"
      parameters:
        - in: "cookie"
          name: "user_id"
          description: "user-logged in id"
          required: true
        - in: "cookie"
          name: "type"
          description: "user type"
          required: true
      responses:
        '201':
          description: "User logout succeed"
        '401':
          description: "User is already logged out"
  /team/{teamID}:
    get:
      tags:
      - "team"
      summary: "Find team by ID"
      description: "Returns a single team page"
      operationId: "getTeamPageByID"
      parameters:
        - name: "teamID"
          in: "path"
          description: "ID of team to return"
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "successful operation,team returned"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamPage'
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Team not found"
  /player/{playerID}:
    get:
      tags:
      - "player"
      summary: "Find player by ID"
      description: "Returns a single player page"
      operationId: "getPlayerPageByID"
      parameters:
        - name: "playerID"
          in: "path"
          description: "ID of player to return"
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "successful operation,team returned"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Player not found"
  /user/favorite/:
    post:
      tags:
      - "favorite"
      summary: "Add Team,Player or Game to the favorite list"
      operationId: "addToFavorite"
      parameters:
        - name: "user_id"
          in: "cookie"
          schema:
            type: string
      requestBody:
        description: JSON object for register
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavoriteBody'
      responses:
        '200':
          description: "successful operation, element added to favorite"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Element not found"
    get:
      tags:
      - "favorite"
      summary: "Get the favorite Games of user.(Only Games!)"
      parameters:
        - name: user_id
          in: "cookie"
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: "successful operation - players returned"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
        "400":
          description: "Invalid ID supplied"
  /far/addReferee:
    post:
      tags:
      - "referee"
      summary: "Add a referee"
      description: "Added a user into the referee DB"
      operationId: "addReferee"
      parameters:
        - name: user_id
          in: "cookie"
          required: true
          schema:
            type: integer
            format: int32
        - name: type
          in: "cookie"
          required: true
          schema:
            type: integer
            format: int32
            example: "FAR"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/referee'
      responses:
        '201':
          description: "Referee add succeed"
        '401':
          description: "cannot create user"
        '409':
          description: "username is taken"
  /far/addGame:
    post:
      tags:
      - "game"
      summary: "Add a game between two 2 teams"
      description: "Add a game into the games DB"
      operationId: "addGame"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddGameBody'
      responses:
        '201':
          description: "User creation succeed"
        '401':
          description: "cannot create user"
        '409':
          description: "username is taken"
components:
  schemas:
    leagueMainPageUser:
      type: "object"
      properties:
        favoriteUpcomingGames:
          type: array
          maxLength: 3
          items: 
            $ref: '#/components/schemas/game' 
        leagueMainPage:
          $ref: '#/components/schemas/leagueMainPage'
    leagueMainPage:
      type: "object"
      properties:
        leagueName:
          type: string
          example: "SuperLiga"
        leagueId:
          type: integer
          format: int32
          example: 271
        seasonName:
          type: string
          example: "2021/2022"
        seasonId:
          type: integer
          format: int32
          example: 17328
        stageName:
          type: string
          example: "Champions"
        stageId:
          type: integer
          format: int32
          example: 7744854
        nextGame:
          $ref: '#/components/schemas/game'
    Game:
      type: "object"
      properties:
        gameID:
          type: integer
          format: int32
          example: 001
        leagueID:
          type: integer
          format: int32
          example: 271
        seasonID:
          type: integer
          format: int32
          example: 145
        stageID:
          type: integer
          format: int32
          example: 467
        refereeID:
          type: integer
          format: int32
          example: 001
        stadiumID:
          type: integer
          format: int32
          example: 124
        homeTeamID:
          type: integer
          format: int32
          example: 003
        awayTeamID:
          type: integer
          format: int32
          example: 004
        gameDate:
          type: string
          format: DATETIME
          example: "15-11-2021-20:00:00"
        homeScore:
          type: integer
          format: int32
          example: 2
        awayScore:
          type: integer
          format: int32
          example: 1
        gameReportID:
          type: integer
          format: int32
          example: 2
    userMainPage:
      type: "object"
      required:
        - user
      properties:
        user: 
            $ref: '#/components/schemas/User'
        favoritGames:
          type: array
          items:
            $ref: '#/components/schemas/Game'
    RegUser:
      type: "object"
      required:
        - name
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 8
          description: "username must be between 3-8 chars and has valid english chars only"
          example: "EdenBer"
        firstname:
          type: string
          example: "barak"
        lastname:
          type: string
          example: "falach"
        country:
          type: string
          example: "Israel"
        email:
          type: string
          format: email
        img:
          type: string
          example: "www.img.url.EranZehavi"
        password:
          description: "The password for login in clear text,5-10 chars, at least one number and one special character"
          type: string
          minLength: 5
          maxLength: 10
        type:
          type: string
          example: "TeamUser"
    TeamPage:
      type: "object"
      properties:
        team:
          $ref: "#/components/schemas/Team"
        coach:
          $ref: "#/components/schemas/Coach"
        players:
          type: array
          items:
            $ref: "#/components/schemas/Player"
    User:
      type: "object"
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 8
          description: "username must be between 3-8 chars and has valid english chars only"
          example: "EdenBer"
        firstname:
          type: string
          example: "barak"
        lastname:
          type: string
          example: "falach"
        country:
          type: string
          example: "israel"
        email:
          type: string
          format: email
        favorites:
          type: object
          properties:
            players:
              type: array
              items:
                type: integer
                format: int32
              example: ["411","004"]
            teams:
              type: array
              items:
                type: integer
                format: int32
              example: ["123","434"]
            games:
              type: array
              items:
                type: integer
                format: int32
              example: ["731","001"]
    Team:
      type: object
      properties:
        teamId:
          type: string
          example: "team5"
        teamName:
          type: string
          example: "barak8995"
        coach:
          type: "string"
          example: "coachId313"
        players:
          type: array
          items:
            type: integer
            format: int32
          example: [125,225]
        country:
          type: string
          example: "israel"
    Player:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 152
        commonName:
          type: string
          example: "Neymar JR"
        nationality:
          type: string
          example: "israeli"
        date:
          type: string
          format: date
          example: 24-10-1994
        country:
          type: string
          example: "Israel"
        height:
          type: number
          format: double
          example: 1.72
        weight:
          type: number
          format: double
          description: "weight might be null"
          example: 72.5
        team:
          type: string
          example: "team_241"
          description: "team_id"
        photo:
          type: string
          format: url 
    Coach:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 12
        commonName:
          type: string
          example: "Pep Guardiola"
        nationality:
          type: string
          example: "israeli"
        date:
          type: string
          format: date
          example: 24-10-1994
        country:
          type: string
          example: "Israel"
        team:
          type: string
          example: "team_241"
          description: "team_id"
        photo:
          type: string
          format: url 
    gameReport: 
      type: object
      properties: 
        id: 
          type: integer
          format: int32
          example: 24
        reportsArray:
          type: array
          items: 
            $ref: '#/components/schemas/report'
    referee: 
      type: object
      properties: 
        user_id: 
          type: integer
          format: int32
          example: 24
        qualification:
          type: string
          example: "Primary"
    report:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 23
        reportType:
          type: string
          enum: ["YELLOW_CARD", "RED_CARD","SUBSITUTE","FOUL","GOAL","OFFSIDE","INJURY"]
          example: "YELLOW_CARD"
        date:
          type: string
          example: "DD/MM/YYYY/HH:MM"
        minute: 
          type: integer
          format: int32
          example: 48
        player1Name:
          type: string
          example: "lukaku"
        player1ID:
          type: number
          format: int32
          example: 20
        player2Name:
          type: string
          example: "cavani"
        player2ID:
          type: number
          format: int32
          example: 21
        description:
          type: string
          example: "free text for explaning the event"
    FavoriteBody:
      type: "object"
      properties:
        favorite_id:
          type: integer
          format: int32 
          example: 2
        favorite_type:
          type: string
          enum: ["TEAM","PLAYER","GAME"]
          example: "TEAM"
    AddGameBody:
      type: "object"
      properties:
        leagueID:
          type: integer
          format: int32
          example: 271
        seasonID:
          type: integer
          format: int32
          example: 145
        stageID:
          type: integer
          format: int32
          example: 467
        refereeID:
          type: integer
          format: int32
          example: 001
        stadiumID:
          type: integer
          format: int32
          example: 124
        homeTeamID:
          type: integer
          format: int32
          example: 003
        awayTeamID:
          type: integer
          format: int32
          example: 004
        gameDate:
          type: string
          format: DATETIME
          example: "15-11-2021-20:00:00"
    LoginBody:
      type: "object"
      properties:
        username:
          type: string
          example: "EdenRef"
        password:
          type: string
          example: "2410!e"